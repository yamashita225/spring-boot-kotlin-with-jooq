/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records


import com.example.jooq.tables.BookAuthor

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BookAuthorRecord() : UpdatableRecordImpl<BookAuthorRecord>(BookAuthor.BOOK_AUTHOR) {

    open var bookId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var authorId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    /**
     * Create a detached, initialised BookAuthorRecord
     */
    constructor(bookId: Int? = null, authorId: Int? = null): this() {
        this.bookId = bookId
        this.authorId = authorId
        resetChangedOnNotNull()
    }
}
